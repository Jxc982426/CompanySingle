<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxc.dao.TransferMapper">
    <resultMap id="BaseResultMap" type="com.jxc.pojo.Transfer">
        <id column="tno" jdbcType="INTEGER" property="tno"/>
        <result column="eno" jdbcType="INTEGER" property="eno"/>
        <result column="olddno" jdbcType="INTEGER" property="olddno"/>
        <result column="newdno" jdbcType="INTEGER" property="newdno"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        tno, eno, olddno, newdno
    </sql>
    <select id="selectByExample" parameterType="com.jxc.pojo.TransferExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from transfer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null and pageSize != null and pageSize != 0">
            limit #{startRow}, #{pageSize}
        </if>

    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from transfer
        where tno = #{tno,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from transfer
        where tno = #{tno,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxc.pojo.TransferExample">
        delete from transfer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxc.pojo.Transfer">
        insert into transfer (tno, eno, olddno,
                              newdno)
        values (#{tno,jdbcType=INTEGER}, #{eno,jdbcType=INTEGER}, #{olddno,jdbcType=INTEGER},
                #{newdno,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.jxc.pojo.Transfer">
        insert into transfer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tno != null">
                tno,
            </if>
            <if test="eno != null">
                eno,
            </if>
            <if test="olddno != null">
                olddno,
            </if>
            <if test="newdno != null">
                newdno,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tno != null">
                #{tno,jdbcType=INTEGER},
            </if>
            <if test="eno != null">
                #{eno,jdbcType=INTEGER},
            </if>
            <if test="olddno != null">
                #{olddno,jdbcType=INTEGER},
            </if>
            <if test="newdno != null">
                #{newdno,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxc.pojo.TransferExample" resultType="java.lang.Long">
        select count(*) from transfer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update transfer
        <set>
            <if test="record.tno != null">
                tno = #{record.tno,jdbcType=INTEGER},
            </if>
            <if test="record.eno != null">
                eno = #{record.eno,jdbcType=INTEGER},
            </if>
            <if test="record.olddno != null">
                olddno = #{record.olddno,jdbcType=INTEGER},
            </if>
            <if test="record.newdno != null">
                newdno = #{record.newdno,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update transfer
        set tno = #{record.tno,jdbcType=INTEGER},
        eno = #{record.eno,jdbcType=INTEGER},
        olddno = #{record.olddno,jdbcType=INTEGER},
        newdno = #{record.newdno,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxc.pojo.Transfer">
        update transfer
        <set>
            <if test="eno != null">
                eno = #{eno,jdbcType=INTEGER},
            </if>
            <if test="olddno != null">
                olddno = #{olddno,jdbcType=INTEGER},
            </if>
            <if test="newdno != null">
                newdno = #{newdno,jdbcType=INTEGER},
            </if>
        </set>
        where tno = #{tno,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxc.pojo.Transfer">
        update transfer
        set eno    = #{eno,jdbcType=INTEGER},
            olddno = #{olddno,jdbcType=INTEGER},
            newdno = #{newdno,jdbcType=INTEGER}
        where tno = #{tno,jdbcType=INTEGER}
    </update>
</mapper>